{"version":3,"sources":["Utilities/Traversal.js","MyComponents/Square.js","Utilities/AsyncDelay.js","Algorithms/BFS.js","Algorithms/DFS.js","MyComponents/Grid.js","App.js","reportWebVitals.js","index.js"],"names":["visit","i","j","element","document","getElementById","classList","remove","add","trace","isInbound","isBlocked","contains","adjacent","e","Square","props","useState","squareState","setSquare","className","onMouseEnter","currentState","ctrlKey","altKey","interact","id","row","col","asyncAwait","milisec","Promise","resolve","setTimeout","bfs","start","end","c","r","a","console","log","level","parent","undefined","lvl","frontier","length","new_front","u","v","push","traceback","point","dfsutil","dfs","destination","Grid","open","setOpen","retrieve","s","parseInt","value","rows","cols","alert","onClick","type","placeholder","params","grid","horizontal","spawnSquares","App","rst","rstHook","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.deb75ac0.chunk.js","sourcesContent":["const visit = (i, j) => {\r\n   \r\n    var element = document.getElementById(`${i}.${j}`);\r\n    element.classList.remove(\"unvisited\");\r\n    element.classList.remove(\"blocked\");\r\n    element.classList.add(\"visited\");\r\n  };\r\n  const unvisit = (i, j) => {\r\n   \r\n    var element = document.getElementById(`${i}.${j}`);\r\n    element.classList.add(\"unvisited\");\r\n    element.classList.remove(\"blocked\");\r\n    element.classList.remove(\"visited\");\r\n  };\r\nconst trace = (i, j) => {\r\n  \r\n  var element = document.getElementById(`${i}.${j}`);\r\n  element.classList.remove(\"unvisited\");\r\n  element.classList.remove(\"blocked\");\r\n  element.classList.remove(\"visited\");\r\n  element.classList.add(\"traced\");\r\n};\r\nconst isInbound = (i,j)=>{\r\n\r\n    if(document.getElementById(`${i}.${j}`)) return true\r\n    return false\r\n}\r\nconst isBlocked = (i,j) =>{\r\n    \r\n    const inbound =document.getElementById(`${i}.${j}`)\r\n    return inbound.classList.contains(\"blocked\")\r\n    \r\n    \r\n}\r\n\r\nfunction adjacent(e) {\r\n    return [\r\n      [e[0], e[1] + 1],\r\n      [e[0], e[1] - 1],\r\n      [e[0] + 1, e[1]],\r\n      [e[0] - 1, e[1]],\r\n      [e[0]+1, e[1] + 1],\r\n      [e[0]-1, e[1] - 1],\r\n      [e[0] + 1, e[1]-1],\r\n      [e[0] - 1, e[1]+1],\r\n\r\n      \r\n      \r\n    ];\r\n  }\r\n\r\n  export {unvisit,visit,isInbound,isBlocked,adjacent,trace}","import React,{useState} from 'react'\r\nimport './Square.css'\r\nfunction Square(props) {\r\n    const [squareState, setSquare] = useState(\"unvisited\")\r\n    function interact(currentState,e){\r\n        \r\n        if(e.ctrlKey) \r\n        {setSquare(\"blocked\")}\r\n\r\n        if(e.altKey){\r\n            setSquare(\"unvisited\")\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className = {`square ${squareState}`} onMouseEnter = {(e)=>interact(squareState,e)} id = {`${props.row}.${props.col}`}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Square\r\n","function asyncAwait(milisec) {\r\n    return new Promise(resolve => {\r\n        setTimeout(() => { resolve('') }, milisec);\r\n    })\r\n}\r\n\r\nexport default asyncAwait","import asyncAwait from '../Utilities/AsyncDelay.js'\r\nimport  {visit,isInbound,isBlocked,adjacent,trace} from '../Utilities/Traversal.js'\r\n\r\n  const bfs = async (start, end, c, r) => {\r\n    console.log(start,\">>>\")\r\n    console.log(end,\">>>>>>>>\")\r\n    let level = {};\r\n    level[start] = 0;\r\n    let parent = {};\r\n    parent[start] = undefined;\r\n    let lvl = 1;\r\n    let frontier = [start];\r\n    while (frontier.length != 0) {\r\n      let new_front = [];\r\n      for (let u of frontier) {\r\n        \r\n        for (let v of adjacent(u)) {\r\n            \r\n          if (\r\n            level[v] == undefined &&\r\n            isInbound(v[0],v[1]) &&\r\n            !isBlocked(v[0],v[1])\r\n          ) {\r\n            \r\n            level[v] = lvl;\r\n            parent[v] = u;\r\n            new_front.push(v);\r\n            await asyncAwait(10)\r\n            visit(v[0],v[1])\r\n            if (v[0] == end[0] && v[1] == end[1]) {\r\n              console.log(\"reached\",lvl);\r\n              traceback(parent,end);\r\n              return lvl;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // console.log(`front:${lvl}${new_front}`);\r\n      lvl += 1;\r\n      frontier = [...new_front];\r\n    }\r\n    \r\n  };\r\n\r\n  const traceback = async (parent,point)=>{\r\n      console.log(\"tracing\",parent)\r\n      while(parent[point]){\r\n        await asyncAwait(100)\r\n        trace(point[0],point[1])\r\n        point = parent[point]\r\n      }\r\n  }\r\n export default bfs","import asyncAwait from '../Utilities/AsyncDelay.js'\r\nimport  {visit,isInbound,isBlocked,adjacent,trace} from '../Utilities/Traversal.js'\r\n\r\n\r\nconst dfsutil = async (point,parent) =>{\r\n    for (let v of adjacent(point)){\r\n        if(isInbound(v[0],v[1]))\r\n        {    if (parent[v]==undefined  && !isBlocked(v[0],v[1])){\r\n                parent[v] = point;\r\n                await asyncAwait(200);\r\n                visit(v[0],v[1])\r\n                dfsutil(v,parent)\r\n            }\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nconst dfs =async (point,destination)=>{\r\n    var parent = {point: [-1,-1]}\r\n    await dfsutil(point,parent);\r\n    \r\n}\r\nexport default dfs","import React,{useState} from \"react\";\r\nimport  {visit,isInbound,isBlocked,adjacent,trace} from '../Utilities/Traversal.js'\r\nimport \"./Grid.css\";\r\nimport Square from \"./Square\";\r\nimport bfs from \"../Algorithms/BFS.js\";\r\nimport dfs from \"../Algorithms/DFS.js\";\r\nfunction Grid(props) {\r\n\r\n  const[open,setOpen] = useState(false)\r\n  const spawnSquares = () => {\r\n    let grid = [];\r\n\r\n    for (let i = 0; i < props.rows; i++) {\r\n      let horizontal = [];\r\n      for (let j = 0; j < props.cols; j++) {\r\n        horizontal.push(<Square row={i} col={j} id={`${i}.${j}`} />);\r\n      }\r\n      grid.push(<div className=\"gridRow\">{horizontal}</div>);\r\n    }\r\n    return grid;\r\n  };\r\n   function retrieve() {\r\n    const s = [\r\n      parseInt(document.getElementById(\"sourceX\").value)\r\n        ? parseInt(document.getElementById(\"sourceX\").value)\r\n        : 0,\r\n      parseInt(document.getElementById(\"sourceY\").value)\r\n        ? parseInt(document.getElementById(\"sourceY\").value)\r\n        : 0,\r\n    ];\r\n    const e = [\r\n      parseInt(document.getElementById(\"destX\").value)\r\n        ? parseInt(document.getElementById(\"destX\").value)\r\n        : props.rows - 1,\r\n      parseInt(document.getElementById(\"destY\").value)\r\n        ? parseInt(document.getElementById(\"destY\").value)\r\n        : props.cols - 1,\r\n    ];\r\n    if(!(isInbound(s[0],s[1]) && isInbound(e[0],e[1]))){\r\n      alert(`Out Of Bounds!!`)\r\n      return false\r\n  }\r\n    return [s, e];\r\n  }\r\n  return (\r\n    <>\r\n    {open?(<>\r\n      <div className=\"grid\">\r\n        <div className=\"prompt\">\r\n      <h4>How to build walls?</h4>\r\n    <p>Press control and hover over tiles to make them un-traversable.</p>\r\n    <h4>How to break the walls?</h4>\r\n    <p>Change of mind? Press alt and hover over blocked tiles to make them traversable, again.</p>\r\n    <h4>Setting start point anf the goal post.</h4>\r\n    <p>Set, start and end x,y co-ordinates respectively, on the left and right inputs; Make sure to not go out of bounds, for Y co-ordinate you can go 0 through 19 and for x you can go 0 through 29.</p>\r\n    <h4>Run simulations.</h4>\r\n    <p>By pressing BFS/DFS/Dijkstra or whatever you fancy.</p>\r\n    \r\n    <button onClick = {()=>{\r\n            setOpen(false)\r\n          }}>Ok!</button>\r\n          </div></div></>):\r\n      (<div className=\"grid\">\r\n        <div className=\"header__grid\">\r\n        \r\n          <div className=\"sourcepoint\">\r\n          <p>Source</p>\r\n            <input type=\"number\" id=\"sourceX\" placeholder=\"0\" />\r\n            <input type=\"number\" id=\"sourceY\" placeholder=\"0\" />\r\n          </div>\r\n          \r\n          <div className=\"destinationpoint\">\r\n          <p>Destination</p>\r\n            <input type=\"number\" id=\"destX\" placeholder=\"19\" />\r\n            <input type=\"number\" id=\"destY\" placeholder=\"29\" />\r\n          </div>\r\n          <button\r\n            onClick={async () => {\r\n              const params = retrieve();\r\n              if(params)bfs(params[0], params[1], props.rows, props.cols);\r\n            }}\r\n          >\r\n            {\" \"}\r\n            BFS\r\n          </button>\r\n          <button\r\n            onClick={async () => {\r\n              const params = retrieve();\r\n              if(params)dfs(params[0], params[1]);\r\n            }}\r\n          >\r\n            {\" \"}\r\n            DFS\r\n          </button>\r\n          <button onClick = {()=>{\r\n            setOpen(true)\r\n          }}>Info</button>\r\n        </div>\r\n        <div className=\"gridSquares\">{spawnSquares()}</div>\r\n      </div>)\r\n}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Grid;\r\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"./MyComponents/Grid.js\"\nexport default function App() {\n  const cols =30\n  const rows =20\n  const [rst,setRst] = useState(0);\n  const reset = () =>{\n      setRst(rst+1)\n  }\n  return (<>\n  <Grid cols = {cols} rows = {rows} rstHook = {rst}/>\n  </>);\n}\n\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}