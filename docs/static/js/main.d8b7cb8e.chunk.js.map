{"version":3,"sources":["MyComponents/Square.js","Utilities/AsyncDelay.js","Utilities/Traversal.js","Algorithms/BFS.js","Algorithms/DFS.js","MyComponents/Grid.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","useState","squareState","setSquare","interact","currentState","className","onClick","ondragover","id","row","col","asyncAwait","milisec","Promise","resolve","setTimeout","visit","i","j","element","document","getElementById","classList","remove","add","trace","isInbound","isBlocked","contains","adjacent","e","bfs","start","end","c","r","a","level","parent","undefined","lvl","frontier","length","new_front","u","v","push","console","log","traceback","point","dfsutil","dfs","destination","Grid","useEffect","rows","cols","grid","horizontal","spawnSquares","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d8b7cb8e.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport './Square.css'\r\nfunction Square(props) {\r\n    const [squareState, setSquare] = useState(\"unvisited\")\r\n    function interact(currentState){\r\n        if (currentState == \"unvisited\")\r\n        {setSquare(\"blocked\")}\r\n        else{setSquare(\"unvisited\")}\r\n    }\r\n    return (\r\n        <div className = {`square ${squareState}`} onClick = {()=>interact(squareState)} ondragover={()=>interact(squareState)} id = {`${props.row}.${props.col}`}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Square\r\n","function asyncAwait(milisec) {\r\n    return new Promise(resolve => {\r\n        setTimeout(() => { resolve('') }, milisec);\r\n    })\r\n}\r\n\r\nexport default asyncAwait","const visit = (i, j) => {\r\n   \r\n    var element = document.getElementById(`${i}.${j}`);\r\n    element.classList.remove(\"unvisited\");\r\n    element.classList.remove(\"blocked\");\r\n    element.classList.add(\"visited\");\r\n  };\r\n\r\nconst trace = (i, j) => {\r\n  \r\n  var element = document.getElementById(`${i}.${j}`);\r\n  element.classList.remove(\"unvisited\");\r\n  element.classList.remove(\"blocked\");\r\n  element.classList.remove(\"visited\");\r\n  element.classList.add(\"traced\");\r\n};\r\nconst isInbound = (i,j)=>{\r\n\r\n    if(document.getElementById(`${i}.${j}`)) return true\r\n    return false\r\n}\r\nconst isBlocked = (i,j) =>{\r\n    \r\n    const inbound =document.getElementById(`${i}.${j}`)\r\n    return inbound.classList.contains(\"blocked\")\r\n    \r\n    \r\n}\r\n\r\nfunction adjacent(e) {\r\n    return [\r\n      [e[0], e[1] + 1],\r\n      [e[0], e[1] - 1],\r\n      [e[0] + 1, e[1]],\r\n      [e[0] - 1, e[1]],\r\n\r\n      \r\n      \r\n    ];\r\n  }\r\n\r\n  export {visit,isInbound,isBlocked,adjacent,trace}","import asyncAwait from '../Utilities/AsyncDelay.js'\r\nimport  {visit,isInbound,isBlocked,adjacent,trace} from '../Utilities/Traversal.js'\r\n\r\n  const bfs = async (start, end, c, r) => {\r\n    let level = {};\r\n    level[start] = 0;\r\n    let parent = {};\r\n    parent[start] = undefined;\r\n    let lvl = 1;\r\n    let frontier = [start];\r\n    while (frontier.length != 0) {\r\n      let new_front = [];\r\n      for (let u of frontier) {\r\n        \r\n        for (let v of adjacent(u)) {\r\n            \r\n          if (\r\n            level[v] == undefined &&\r\n            isInbound(v[0],v[1]) &&\r\n            !isBlocked(v[0],v[1])\r\n          ) {\r\n            \r\n            level[v] = lvl;\r\n            parent[v] = u;\r\n            new_front.push(v);\r\n            await asyncAwait(10)\r\n            visit(v[0],v[1])\r\n            if (v[0] == end[0] && v[1] == end[1]) {\r\n              console.log(\"reached\",lvl);\r\n              traceback(parent,end);\r\n              return lvl;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      console.log(`front:${lvl}${new_front}`);\r\n      lvl += 1;\r\n      frontier = [...new_front];\r\n    }\r\n    \r\n  };\r\n\r\n  const traceback = async (parent,point)=>{\r\n      console.log(\"tracing\",parent)\r\n      while(parent[point]){\r\n        await asyncAwait(100)\r\n        trace(point[0],point[1])\r\n        point = parent[point]\r\n      }\r\n  }\r\n export default bfs","import asyncAwait from '../Utilities/AsyncDelay.js'\r\nimport  {visit,isInbound,isBlocked,adjacent,trace} from '../Utilities/Traversal.js'\r\n\r\n\r\nconst dfsutil = async (point,parent) =>{\r\n    for (let v of adjacent(point)){\r\n        if(isInbound(v[0],v[1]))\r\n        {    if (parent[v]==undefined  && !isBlocked(v[0],v[1])){\r\n                parent[v] = point;\r\n                await asyncAwait(10);\r\n                visit(v[0],v[1])\r\n                dfsutil(v,parent)\r\n            }}\r\n    }\r\n    \r\n}\r\n\r\nconst dfs =async (point,destination)=>{\r\n    var parent = {point: [-1,-1]}\r\n    await dfsutil(point,parent);\r\n    await asyncAwait(1000);\r\n    while(destination)\r\n    {\r\n    console.log(parent[destination])\r\n    await asyncAwait(100)\r\n    trace(destination[0],destination[1])\r\n    destination = parent[destination]\r\n    }\r\n}\r\nexport default dfs","import React, { useState, useEffect } from \"react\";\r\nimport \"./Grid.css\";\r\nimport Square from \"./Square\";\r\nimport bfs from \"../Algorithms/BFS.js\";\r\nimport dfs from \"../Algorithms/DFS.js\";\r\nfunction Grid(props) {\r\n  const spawnSquares = () => {\r\n    let grid = [];\r\n\r\n    for (let i = 0; i < props.rows; i++) {\r\n      let horizontal = [];\r\n      for (let j = 0; j < props.cols; j++) {\r\n        horizontal.push(<Square row={i} col={j} id={`${i}.${j}`} />);\r\n      }\r\n      grid.push(<div className=\"gridRow\">{horizontal}</div>);\r\n    }\r\n    return grid;\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n  return (\r\n    <div className=\"grid\">\r\n      <button\r\n        onClick={() => {\r\n          bfs([0, 0], [props.rows-1, props.cols-1], props.rows, props.cols);\r\n        }}\r\n      >\r\n        {\" \"}\r\n        Start sim bfs\r\n      </button>\r\n      <button\r\n        onClick={() => {\r\n          dfs([0, 0],[props.rows-1, props.cols-1]);\r\n        }}\r\n      >\r\n        {\" \"}\r\n        Start sim dfs\r\n      </button>\r\n      {spawnSquares()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Grid;\r\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"./MyComponents/Grid.js\"\nexport default function App() {\n  const cols =30\n  const rows =20\n  // const visit = async (i,j)  =>{\n  //   var id = i+\".\"+j\n  //   var element = document.getElementById(id);\n  //   element.classList.remove(\"unvisited\");\n  //   element.classList.add(\"visited\");\n  //   element.classList.remove(\"blocked\")\n  // }\n\n  \n  // useEffect(async () => {\n  //   for(let i = 0;i<rows/2;i++){\n  //     for(let j=0;j<cols/2;j++){\n        \n  //         visit(i,j)\n  //     }\n  //   }\n    \n  // }, [])\n \n  // const blocked = (i,j) => {\n  //   var id = i+\".\"+j\n  //   var element = document.getElementById(id);\n  //   element.classList.remove(\"unvisited\");\n  //   element.classList.remove(\"visited\");\n  //   element.classList.add(\"blocked\")\n  // }\n  return (<>\n  <Grid cols = {cols} rows = {rows}/>\n  </>);\n}\n\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}